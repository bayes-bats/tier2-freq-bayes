---
title: "CEJS Activity"
format: html
---

<!-- solution-begin -->
These are instructor notes; they will be removed from the student-facing assignment file.

This is the **Bayesian** form of the activity.
<!-- solution-end -->

```{r setup}
#| include: false
#| echo: false
library(tidyverse)
library(rstanarm)
library(bayesplot)
library(broom.mixed)
library(patchwork)

filename <- "../data/1.0-communities.csv"
```

```{r wrangling}
#| include: false
#| echo: false
df_raw <- read_csv(filename)
df_data <- 
  df_raw %>%
  janitor::clean_names()
```

# Overview

(Preview the overview figure)

```{r fig-overview}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_data %>% 
  filter(state_territory %in% c("Florida", "Massachusetts", "Colorado")) %>% 
  
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  facet_wrap(~state_territory, ncol = 2) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

- Florida and Massachusetts have a clear positive trend; this is evidence of inequitable outcomes
- Colorado has a negative trend; this is a surprising result

# Analyze a Bayesian Model

(Introduce the Bayesian model)

\[ B = m P + b + \epsilon, \]

where $B$ is the energy burden percentile, $P$ is the percent Black, $m$ is the slope parameter, $b$ is the intercept parameter, and $\epsilon$ is a *residual* term that represents factors not accounted in the model. The residual term is assumed to be normally distributed $\epsilon \sim N(0, \sigma^2)$ with an unknown parameter $\sigma^2$. All three parameters have a prior distribution, which we must specify

\[\begin{aligned} m \sim N(\mu_m, \sigma_m^2), \\ b \sim N(\mu_b, \sigma_b^2), \\ \sigma^2 \sim ??? \end{aligned},\]

where $m, b, \sigma^2$ are independent.

<!-- solution-begin -->
::: {.callout-note icon=false title="Instructor Note: Model Assumptions"}
Note that this model makes a number of important assumptions, which students may identify and question. We recommend validating student input, but try to maintain a focus on the assumptions that are aligned with the lesson's learning objectives. We enumerate important model assumptions, ramifications, and relevance to learning objectives here:

- The responses $B_i$ are independent when conditioned on the percent Black $P$. 
  - This is almost surely not true as there are a variety of other factors that affect one's energy burden, such as State-level economic policies. These other factors are not entirely captured in our lone predictor ($P$), which may manifest as association between the observed responses ($B_i$). This will lead to an *omitted variable bias* in our estimates.
  - While omitted variable bias is an important consideration, it is outside the learning objectives in this lesson since this assumption is shared between the Frequentist and Bayesian approaches.
- The structure of the response is linear; that is $B = m P + b + \epsilon$.
  - This discounts the possibility of nonlinearity; for instance, there could be little change in the mean energy burden at small percent Black, but much larger change at higher values.
  - While the structure of the response is an important consideration, it is outside the learning objectives in this lesson since this assumption is shared between the Frequentist and Bayesian approaches.
- Residuals are normally distributed $\epsilon \sim N(0, \sigma^2)$ with constant $\sigma^2$.
  - This will never be exactly true, which we can check by inspecting the residuals. This assumptions has implications for our predictive uncertainty; for instance, assuming a constant $\sigma^2$ discounts the possibility of heteroskedasticity. 
  - While the residual distribution is an important consideration, it is outside the learning objectives in this lesson since this assumption is shared between the Frequentist and Bayesian approaches.
- The intercept $b$ and slope $m$ parameters are treated as random variables with a distribution that represents our state of knowledge.
  - This is a fundamental component of the Bayesian approach, and hence is directly related to the lesson's learning objectives.
:::
<!-- solution-end -->

```{r fit-MA}
#| include: false
#| echo: false
#| cache: true
model_MA <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "Massachusetts"),
      !is.na(percent_black_or_african_american_alone)
    ),
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Prior model, use the Stan defaults
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
)
```

## Study the posterior distribution

(Introduce the posterior)

```{r posteriors-MA}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_model_MA <- 
  model_MA %>% 
  as_tibble() %>% 
  select(Intercept = `(Intercept)`, Slope = percent_black_or_african_american_alone)

df_model_MA %>% 
  pivot_longer(
    c(Intercept, Slope),
    names_to = "parameter",
    values_to = "x"
  ) %>% 
  
  ggplot(aes(x)) +
  geom_density() +
  facet_wrap(~parameter) +
  theme_minimal() +
  labs(
    x = "Parameter Value",
    y = "Density",
  )
```

::: {.callout-note icon=false title="Synthesizing Descriptive Statistics"}
Which model parameter describes the **trend** of the energy burden? What does the posterior say about that parameter value? 
:::

The posterior distribution helps us determine **how confident** we should be in conclusions drawn from the model. The next exercise will help you assess confidence in results based on the fitted model.

## Assessing confidence

Let's imagine three different posterior distributions for the posterior (marginal) distribution for the slope parameter $m$.

```{r notional-posteriors}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
tibble(x = seq(-25, +75, length.out = 200)) %>% 
  mutate(
    d_A = dnorm(x, mean =  1, sd =  5),
    d_B = dnorm(x, mean = 25, sd = 20),
    d_C = dnorm(x, mean = 25, sd =  5),
  ) %>% 
  pivot_longer(
    cols = contains("d_"),
    names_sep = "_",
    names_to = c(".value", "Posterior")
  ) %>% 
  
  ggplot(aes(x, d)) +
  geom_line() +
  geom_vline(xintercept = 0, linetype = "dotted") +
  facet_grid(~Posterior, labeller = label_both) +
  theme_minimal() +
  labs(
    x = "Slope Parameter",
    y = "Posterior Density",
  )
```

*TODO* separate prompts and solutions

**Model summaries**

- Roughly, what fraction of *Posterior Distribution A* is greater than zero?
  - Precisely 57.93%, so roughly 60%
- Roughly, what fraction of *Posterior Distribution B* is greater than zero?
  - Precisely 89.44%, so roughly 90%
- Roughly, what fraction of *Posterior Distribution C* is greater than zero?
  - Essentially 100%
- Which posterior gives the *highest probability* that the slope parameter is positive? How can you tell?
  - Posterior C, as the probability is essentially 100% (as we identified above).
  
**General inference* 
  
- How does the slope parameter relate to our hypothesis? As a reminder, our hypothesis is:
  
  | _As the population of Black Americans increases (decreases), the level of energy expenditure increases (decreases)._
  
  - The slope parameter is directly related to our hypothesis. A positive slope is in agreement with our hypothesis.
  
Let's return to the posterior from our model for the Massachusetts data.

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_model_MA %>% 
  ggplot(aes(Slope)) +
  geom_density() +
  scale_x_continuous(limits = c(0, 100)) +
  theme_minimal() +
  labs(
    x = "Slope Parameter",
    y = "Posterior Density",
    title = "Posterior Density: Massachusetts Results"
  )
```

*TODO* separate prompts and solutions

- For Massachusetts, does the model support or contradict our hypothesis? As a reminder, our hypothesis is:
  
  | _As the population of Black Americans increases (decreases), the level of energy expenditure increases (decreases)._

## Study the posterior predictions

(Describe posterior predictions)

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_data %>% 
  filter(str_detect(state_territory, "Massachusetts")) %>% 
  
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_MA, n = 1000),
    aes(y = .value, group = .draw), 
    alpha = 0.01,
    linewidth = 2.0,
    color = "blue"
  ) +
  geom_point(size = 0.1) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

- How well do the posterior predictions agree with the data?

# State-based priors

(Introduce the idea of using a posterior as a new prior)

```{r prior-MA}
#| include: false
#| echo: false
#| cache: true
mean_Intercept_MA <- 
  df_model_MA %>% 
  pull(Intercept) %>% 
  mean()
mean_Slope_MA <- 
  df_model_MA %>% 
  pull(Slope) %>% 
  mean()

sd_Intercept_MA <- 
  df_model_MA %>% 
  pull(Intercept) %>% 
  sd()
sd_Slope_MA <- 
  df_model_MA %>% 
  pull(Slope) %>% 
  sd()
```


```{r fit-MN}
#| include: false
#| echo: false
#| cache: true
model_MN <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "Minnesota"),
      !is.na(percent_black_or_african_american_alone)
    ),
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Prior model, use the Stan defaults
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
)

df_model_MN <- 
  model_MN %>% 
  as_tibble() %>% 
  select(Intercept = `(Intercept)`, Slope = percent_black_or_african_american_alone)

mean_Intercept_MN <- 
  df_model_MN %>% 
  pull(Intercept) %>% 
  mean()
mean_Slope_MN <- 
  df_model_MN %>% 
  pull(Slope) %>% 
  mean()

sd_Intercept_MN <- 
  df_model_MN %>% 
  pull(Intercept) %>% 
  sd()
sd_Slope_MN <- 
  df_model_MN %>% 
  pull(Slope) %>% 
  sd()
```


```{r fit-NH}
#| include: false
#| echo: false
#| cache: true
model_NH <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "New Hampshire"),
      !is.na(percent_black_or_african_american_alone)
    ),
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Prior model, use the Stan defaults
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
)

df_model_NH <- 
  model_NH %>% 
  as_tibble() %>% 
  select(Intercept = `(Intercept)`, Slope = percent_black_or_african_american_alone)

mean_Intercept_NH <- 
  df_model_NH %>% 
  pull(Intercept) %>% 
  mean()
mean_Slope_NH <- 
  df_model_NH %>% 
  pull(Slope) %>% 
  mean()

sd_Intercept_NH <- 
  df_model_NH %>% 
  pull(Intercept) %>% 
  sd()
sd_Slope_NH <- 
  df_model_NH %>% 
  pull(Slope) %>% 
  sd()
```


```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
tibble(x = seq(-100, 100, length.out = 500)) %>% 
  mutate(
    d_Intercept_MA = dnorm(x, mean = mean_Intercept_MA, sd = sd_Intercept_MA),
    d_Intercept_MN = dnorm(x, mean = mean_Intercept_MN, sd = sd_Intercept_MN),
    d_Intercept_NH = dnorm(x, mean = mean_Intercept_NH, sd = sd_Intercept_NH),
    
    d_Slope_MA = dnorm(x, mean = mean_Slope_MA, sd = sd_Slope_MA),
    d_Slope_MN = dnorm(x, mean = mean_Slope_MN, sd = sd_Slope_MN),
    d_Slope_NH = dnorm(x, mean = mean_Slope_NH, sd = sd_Slope_NH),
  ) %>% 
  pivot_longer(
    cols = contains("d_"),
    names_sep = "_",
    names_to = c(".value", "Parameter", "State")
  ) %>% 
  
  ggplot(aes(x, d)) +
  geom_line() +
  geom_vline(xintercept = 0, linetype = "dotted") +
  facet_grid(Parameter ~ State, scales = "free", labeller = label_both) +
  theme_minimal() +
  labs(
    x = "Parameter Value",
    y = "Prior Density"
  )
```


# Colorado


<!-- solution-begin -->
## (PREP) Print CO results

Print the following three graphs and place them in envelopes labelled for the State-based prior.

```{r}
#| include: false
#| echo: false
#|cache: true
model_CO_MA <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "Colorado"),
      !is.na(percent_black_or_african_american_alone)
    ),
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Slope prior
  prior = normal(mean_Slope_MA, sd_Slope_MA),
  # Intercept prior
  prior_intercept = normal(mean_Intercept_MA, sd_Intercept_MA),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
)

model_CO_MN <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "Colorado"),
      !is.na(percent_black_or_african_american_alone)
    ),
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Slope prior
  prior = normal(mean_Slope_MN, sd_Slope_MN),
  # Intercept prior
  prior_intercept = normal(mean_Intercept_MN, sd_Intercept_MN),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
)

model_CO_NH <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "Colorado"),
      !is.na(percent_black_or_african_american_alone)
    ),
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Slope prior
  prior = normal(mean_Slope_NH, sd_Slope_NH),
  # Intercept prior
  prior_intercept = normal(mean_Intercept_NH, sd_Intercept_NH),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
)
```

### MA-based Prior

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
p_CO_MA_predict <- 
  df_data %>% 
  filter(str_detect(state_territory, "Colorado")) %>% 
  
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_CO_MA, n = 1000),
    aes(y = .value, group = .draw), 
    alpha = 0.01,
    linewidth = 2.0,
    color = "cyan",
  ) +
  
  geom_point(size = 0.1) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  guides(color = "none") +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
    title = "Colorado, MA-based Prior"
  )

p_CO_MA_posterior <- 
  model_CO_MA %>% 
  as_tibble() %>% 
  select(Slope = percent_black_or_african_american_alone) %>% 
  ggplot(aes(Slope)) +
  geom_density() +
  theme_minimal() +
  labs(
    x = "Slope Parameter",
    y = "Posterior Density"
  )

p_CO_MA_predict + p_CO_MA_posterior 
```

### MN-based Prior

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
p_CO_MN_predict <- 
  df_data %>% 
  filter(str_detect(state_territory, "Colorado")) %>% 
  
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_CO_MN, n = 1000),
    aes(y = .value, group = .draw), 
    alpha = 0.01,
    linewidth = 2.0,
    color = "cyan",
  ) +
  
  geom_point(size = 0.1) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  guides(color = "none") +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
    title = "Colorado, MN-based Prior"
  )

p_CO_MN_posterior <- 
  model_CO_MN %>% 
  as_tibble() %>% 
  select(Slope = percent_black_or_african_american_alone) %>% 
  ggplot(aes(Slope)) +
  geom_density() +
  theme_minimal() +
  labs(
    x = "Slope Parameter",
    y = "Posterior Density"
  )

p_CO_MN_predict + p_CO_MN_posterior 
```

### NH-based Prior

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
p_CO_NH_predict <- 
  df_data %>% 
  filter(str_detect(state_territory, "Colorado")) %>% 
  
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_CO_NH, n = 1000),
    aes(y = .value, group = .draw), 
    alpha = 0.01,
    linewidth = 2.0,
    color = "cyan",
  ) +
  
  geom_point(size = 0.1) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  guides(color = "none") +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
    title = "Colorado, NH-based Prior"
  )

p_CO_NH_posterior <- 
  model_CO_NH %>% 
  as_tibble() %>% 
  select(Slope = percent_black_or_african_american_alone) %>% 
  ggplot(aes(Slope)) +
  geom_density() +
  theme_minimal() +
  labs(
    x = "Slope Parameter",
    y = "Posterior Density"
  )

p_CO_NH_predict + p_CO_NH_posterior 
```

<!-- solution-end -->

## Study the results

::: {.callout-note icon=false title="Studying Model Results"}
What does the model suggest about the trend of energy burden with percent Black in Colorado? How confident are you in your conclusion?
:::

<!-- solution-begin -->
- For the MA-based prior, the posterior predictions do not match the data well. The posterior is extremely confident in a positive slope, which agrees with our hypothesis.
- For the MN-based prior, the posterior predictions do match the data well. The posterior is extremely confident in a negative slope, which contradicts our hypothesis.
- For the NH-based prior, the posterior predictions do match the data well. The posterior is quite confident in a negative slope, which contradicts our hypothesis.
<!-- solution-end -->

# Florida 

## Deal with Limited Data

(Spin a yarn about how FL might redact their data)

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
set.seed(101)

df_fl <- 
  df_data %>% 
  filter(state_territory == "Florida") %>% 
  slice_sample(n = 25)

df_fl %>% 
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_point(size = 1.0) +
  geom_smooth(method = "lm") +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

- Given the limited data, we can't confidently conclude that there is a positive slope

## Study the posterior predictions

```{r}
#| include: false
#| echo: false
#|cache: true
model_FL1 <- stan_glm(
  data = df_fl,
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Use parameter set 1
  prior = normal(mean_opt1, sd_opt1),
  # Use an "overconfident" prior for the intercept, based on the energy burden posterior for MA
  prior_intercept = normal(51, 1),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
) 

model_FL2 <- stan_glm(
  data = df_fl,
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Use parameter set 2
  prior = normal(mean_opt2, sd_opt2),
  # Use an "overconfident" prior for the intercept, based on the energy burden posterior for MA
  prior_intercept = normal(51, 1),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
) 

model_FL3 <- stan_glm(
  data = df_fl,
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Use parameter set 3
  prior = normal(mean_opt3, sd_opt3),
  # Use an "overconfident" prior for the intercept, based on the energy burden posterior for MA
  prior_intercept = normal(51, 1),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
) 
```


```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_fl %>% 
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_FL1, n = 1000) %>% 
      mutate(Option = "1"),
    aes(y = .value, group = .draw, color = Option), 
    alpha = 0.01,
    linewidth = 2.0,
  ) +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_FL2, n = 1000) %>% 
      mutate(Option = "2"),
    aes(y = .value, group = .draw, color = Option), 
    alpha = 0.01,
    linewidth = 2.0,
  ) +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_FL3, n = 1000) %>% 
      mutate(Option = "3"),
    aes(y = .value, group = .draw, color = Option), 
    alpha = 0.01,
    linewidth = 2.0,
  ) +
  
  geom_point(size = 0.1) +
  facet_grid(~Option, labeller = label_both) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  guides(color = "none") +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
    title = "Florida, Limited Data"
  )
```

::: {.callout-note icon=false title="Synthesizing Descriptive Statistics"}
What does the model suggest about the trend of energy burden with percent Black in Florida? How confident are you in your conclusion?
:::

<!-- solution-begin -->
- With the prior, we can confidently conclude there is a positive slope
<!-- solution-end -->
