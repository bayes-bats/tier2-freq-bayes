---
title: "CEJS Activity"
format: html
---

<!-- solution-begin -->

These are instructor notes; they will be removed from the student-facing assignment file.

This is the **Frequentist** form of the activity. <!-- solution-end -->

```{r setup}
#| include: false
#| echo: false
library(tidyverse)
library(broom)

filename <- "../data/1.0-communities.csv"
```

```{r wrangling}
#| include: false
#| echo: false
df_raw <- read_csv(filename)
df_data <- 
  df_raw %>%
  janitor::clean_names()
```

# Overview

(Preview the overview figure)

```{r fig-overview}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_data %>% 
  filter(state_territory %in% c("Florida", "Massachusetts", "Colorado")) %>% 
  
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  facet_wrap(~state_territory, ncol = 2) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

-   Florida and Massachusetts have a clear positive trend; this is evidence of inequitable outcomes 
-   Colorado has a negative trend; this is a surprising result

# Analyze a Frequentist Model

(Introduce the Frequentist model)

\[ B = m P + b, \]

where $B$ is the energy burden percentile, $P$ is the percent black, $m$ is the slope parameter, and $b$ is the intercept parameter.

```{r fit-MA}
#| include: false
#| echo: false
#| cache: true
df_MA <- 
  df_data %>% 
  filter(
    str_detect(state_territory, "Massachusetts"),
    !is.na(percent_black_or_african_american_alone),
    !is.na(energy_burden_percentile)
  ) %>% 
  select(energy_burden_percentile, percent_black_or_african_american_alone)

model_MA <- 
  lm(
    data = df_MA,
    formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  )
```

## Study the MLE estimates

(Introduce the MLE estimates)

```{r mle-MA}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_model_MA <- 
  model_MA %>% 
  tidy() %>% 
  mutate(
    lower = estimate - 2 * std.error,
    upper = estimate + 2 * std.error,
  )

df_model_MA %>% 
  select(term, lower, estimate, upper) %>% 
  mutate(
    term = case_when(
      term == "(Intercept)" ~ "Intercept",
      term == "percent_black_or_african_american_alone" ~ "Slope"
    )
  ) %>% 
  mutate(across(
    c(lower, estimate, upper),
    ~round(., digits = 1)
  )) %>% 
  
  select(Term = term, Lower = lower, Estimate = estimate, Upper = upper) %>% 
  knitr::kable()
```

-   Do the CI exclude zero?

## Assessing confidence

TODO teach students how to do this through an example

## Study the MLE predictions

(Describe posterior predictions)

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8

df_MA_pred <-  
  tibble(percent_black_or_african_american_alone = seq(
    min(df_MA$percent_black_or_african_american_alone),
    max(df_MA$percent_black_or_african_american_alone),
    length.out = 100
  ))

df_MA_pred <- 
  bind_cols(
    df_MA_pred,
    predict(
      model_MA, 
      interval = 'confidence',
      newdata = df_MA_pred
    )
  )

df_MA_pred %>% 

  ggplot(aes(
    x = percent_black_or_african_american_alone,
  )) +
  geom_ribbon(
    aes(ymin = lwr, ymax = upr),
    fill = "blue",
    alpha = 1/3
  ) +
  geom_line(
    aes(y = fit),
    linewidth = 0.7,
    color = "blue"
  ) +
  geom_point(
    data = df_MA,
    mapping = aes(y = energy_burden_percentile),
    size = 0.1
  ) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

-   How well do the posterior predictions agree with the data?

# Colorado

```{r fit-CO}
#| include: false
#| echo: false
#| cache: true
df_CO <- 
  df_data %>% 
  filter(
    str_detect(state_territory, "Colorado"),
    !is.na(percent_black_or_african_american_alone),
    !is.na(energy_burden_percentile)
  ) %>% 
  select(energy_burden_percentile, percent_black_or_african_american_alone)

model_CO <- 
  lm(
    data = df_CO,
    formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  )
```

## Study the MLE estimates

(Introduce the MLE estimates)

```{r mle-CO}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_model_CO <- 
  model_CO %>% 
  tidy() %>% 
  mutate(
    lower = estimate - 2 * std.error,
    upper = estimate + 2 * std.error,
  )

df_model_CO %>% 
  select(term, lower, estimate, upper) %>% 
  mutate(
    term = case_when(
      term == "(Intercept)" ~ "Intercept",
      term == "percent_black_or_african_american_alone" ~ "Slope"
    )
  ) %>% 
  mutate(across(
    c(lower, estimate, upper),
    ~round(., digits = 1)
  )) %>% 
  
  select(Term = term, Lower = lower, Estimate = estimate, Upper = upper) %>% 
  knitr::kable()
```

-   Do the CI exclude zero?

## Study the MLE predictions

(Describe posterior predictions)

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8

df_CO_pred <-  
  tibble(percent_black_or_african_american_alone = seq(
    min(df_CO$percent_black_or_african_american_alone),
    max(df_CO$percent_black_or_african_american_alone),
    length.out = 100
  ))

df_CO_pred <- 
  bind_cols(
    df_CO_pred,
    predict(
      model_CO, 
      interval = 'confidence',
      newdata = df_CO_pred
    )
  )

df_CO_pred %>% 

  ggplot(aes(
    x = percent_black_or_african_american_alone,
  )) +
  geom_ribbon(
    aes(ymin = lwr, ymax = upr),
    fill = "blue",
    alpha = 1/3
  ) +
  geom_line(
    aes(y = fit),
    linewidth = 0.7,
    color = "blue"
  ) +
  geom_point(
    data = df_CO,
    mapping = aes(y = energy_burden_percentile),
    size = 0.1
  ) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

-   How well do the posterior predictions agree with the data?

# Florida

## Deal with Limited Data

(Spin a yarn about how FL might redact their data)

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
set.seed(101)

df_FL <- 
  df_data %>% 
  filter(state_territory == "Florida") %>% 
  slice_sample(n = 25)

df_FL %>% 
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_point(size = 1.0) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

```{r fit-FL}
#| include: false
#| echo: false
#| cache: true
model_FL <- 
  lm(
    data = df_FL,
    formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  )
```

## Study the MLE estimates

(Introduce the MLE estimates)

```{r mle-FL}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8
df_model_FL <- 
  model_FL %>% 
  tidy() %>% 
  mutate(
    lower = estimate - 2 * std.error,
    upper = estimate + 2 * std.error,
  )

df_model_FL %>% 
  select(term, lower, estimate, upper) %>% 
  mutate(
    term = case_when(
      term == "(Intercept)" ~ "Intercept",
      term == "percent_black_or_african_american_alone" ~ "Slope"
    )
  ) %>% 
  mutate(across(
    c(lower, estimate, upper),
    ~round(., digits = 1)
  )) %>% 
  
  select(Term = term, Lower = lower, Estimate = estimate, Upper = upper) %>% 
  knitr::kable()
```

-   Do the CI exclude zero?

## Study the MLE predictions

(Describe posterior predictions)

```{r}
#| warning: false
#| echo: false
#| fig-align: center
#| fig-height: 8

df_FL_pred <-  
  tibble(percent_black_or_african_american_alone = seq(
    min(df_FL$percent_black_or_african_american_alone),
    max(df_FL$percent_black_or_african_american_alone),
    length.out = 100
  ))

df_FL_pred <- 
  bind_cols(
    df_FL_pred,
    predict(
      model_FL, 
      interval = 'confidence',
      newdata = df_FL_pred
    )
  )

df_FL_pred %>% 

  ggplot(aes(
    x = percent_black_or_african_american_alone,
  )) +
  geom_ribbon(
    aes(ymin = lwr, ymax = upr),
    fill = "blue",
    alpha = 1/3
  ) +
  geom_line(
    aes(y = fit),
    linewidth = 0.7,
    color = "blue"
  ) +
  geom_point(
    data = df_FL,
    mapping = aes(y = energy_burden_percentile),
    size = 1.0
  ) +
  scale_x_continuous(labels = scales::percent) +
  theme_minimal() +
  labs(
    x = "Percent Black Census Tract",
    y = "Energy Burden Percentile",
  )
```

-   How well do the posterior predictions agree with the data?
