---
title: "CEJS Dataset"
format: html
---

See [Climate and Economic Justice Screening Tool](https://screeningtool.geoplatform.gov/en/)

# Setup

```{r}
library(tidyverse)
library(rstanarm)
library(bayesplot)

library(broom.mixed)

filename <- "../data/1.0-communities.csv"
```


```{r}
df_raw <- read_csv(filename)
```


```{r}
df_data <- 
  df_raw %>%
  janitor::clean_names()

df_data %>% 
  glimpse()
```

# EDA

## 1D EDA

### Percentiles

Some of the percentiles are suspicious!

```{r}
df_data %>% 
  ggplot(aes(energy_burden_percentile)) +
  geom_histogram(bins = 100)
```

- Percentiles should be uniformly distributed; however, this is anything but uniform

```{r, fig.height = 18}
df_data %>% 
  select(matches("*_percentile$")) %>% 
  pivot_longer(
    cols = everything(),
    names_pattern = "(.*)_(percentile)$",
    names_to = c("quantity", ".value")
  ) %>% 
  
  ggplot(aes(percentile)) +
  geom_histogram(bins = 100) +
  facet_wrap(~quantity, scales = "free_y", ncol = 3) +
  theme_minimal() +
  theme(
    strip.text.x = element_text(size = 14),
    axis.text = element_text(size = 16),
    axis.title = element_text(size = 18),
  )
 
ggsave("percentiles.png", bg = "white") 
```

- some of the percentiles follow a uniform distribution, while others do not!

## Black or African American

### **Energy burden

> Average annual energy costs divided by household income


```{r}
df_data %>% 
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_hex() +
  geom_smooth()
```

- this is definitely *sustainability related*

**Inferential questions**:
- what is the likely trend for percent hispanic, given percent black?
- what is the likely trend for pm2.5, given energy burden?

#### Mass. only

```{r}
df_data %>% 
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_point(
    data = . %>% filter(str_detect(state_territory, "Massachusetts"))
  ) +
  geom_smooth(method = "lm") +
  geom_smooth(
    data = . %>% 
    filter(str_detect(state_territory, "Massachusetts")),
    linetype = "dotted",
    method = "lm"
  )
```


#### All states

```{r, fig.width=10}
df_data %>% 
  
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  facet_wrap(~state_territory) +
  theme_minimal() +
  labs(
    x = "Percent Black",
    y = "Energy Burden Percentile",
  )
```

#### Selected states

```{r, fig.width=10}
df_data %>% 
  filter(state_territory %in% c("Florida", "Massachusetts", "Georgia", "Maine")) %>% 
  
  ggplot(aes(
    percent_black_or_african_american_alone,
    energy_burden_percentile
  )) +
  geom_point(size = 0.1) +
  geom_smooth(method = "lm") +
  facet_wrap(~state_territory) +
  theme_minimal() +
  labs(
    x = "Percent Black",
    y = "Energy Burden Percentile",
  )
```


### *Poverty line

```{r}
df_data %>% 
  ggplot(aes(percent_black_or_african_american_alone, adjusted_percent_of_individuals_below_200_percent_federal_poverty_line_percentile)) +
  geom_hex() +
  geom_smooth()
```


### *Unemployment

```{r}
df_data %>% 
  ggplot(aes(
    percent_black_or_african_american_alone,
    unemployment_percent_percentile,
  )) +
  geom_hex() +
  geom_smooth()
```

##### Mass. only

```{r}
df_data %>% 
  
  ggplot(aes(
    percent_black_or_african_american_alone,
    unemployment_percent_percentile,
  )) +
  geom_point(
    data = . %>% 
    filter(str_detect(state_territory, "Massachusetts"))
  ) +
  geom_smooth(method = "lm") +
  geom_smooth(
    data = . %>% 
    filter(str_detect(state_territory, "Massachusetts")),
    linetype = "dotted",
    method = "lm"
  )

```

- We might be able to do inference from one state (sample) to the full country (population)


### ()pm2.5

```{r}
df_data %>% 
  ggplot(aes(
    percent_black_or_african_american_alone,
    pm2_5_in_the_air_percentile
  )) +
  geom_hex() +
  geom_smooth()
```

#### Mass. only

```{r}
df_data %>% 
  
  ggplot(aes(
    percent_black_or_african_american_alone,
    pm2_5_in_the_air_percentile
  )) +
  geom_point(
    data = . %>% 
    filter(str_detect(state_territory, "Massachusetts"))
  ) +
  geom_smooth(method = "lm") +
  geom_smooth(
    data = . %>% 
    filter(str_detect(state_territory, "Massachusetts")),
    linetype = "dotted",
    method = "lm"
  )
```


### ()Flood risk

```{r}
df_data %>% 
  ggplot(aes(
    percent_black_or_african_american_alone,
    share_of_properties_at_risk_of_flood_in_30_years_percentile
  )) +
  geom_hex() +
  geom_smooth()
```

# Prototype

## Model: Energy Burden, default priors

```{r}
#|cache: true
model_energyBurden <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "Massachusetts"),
      !is.na(percent_black_or_african_american_alone)
    ),
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Prior model, use the Stan defaults
  # prior_intercept = normal(5000, 1000),
  # prior = normal(100, 40), 
  # prior_aux = exponential(0.0008),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
) 
```

### Diagnostics

```{r}
# Effective sample size ratio and Rhat
neff_ratio(model_energyBurden)
rhat(model_energyBurden)
```



```{r fig.width=12}
mcmc_trace(model_energyBurden, size = 0.1)
```

- No signs of a MCMC pathologies

### Posterior analysis

```{r fig.width=12, fig.height=6}
  mcmc_dens_overlay(model_energyBurden)
```


```{r}
df_model_energyBurden <- 
  model_energyBurden %>% 
  as_tibble()

df_model_energyBurden %>% 
  ggplot(aes(`(Intercept)`, percent_black_or_african_american_alone)) +
  geom_density2d() +
  labs(
    x = "Intercept",
    y = "Slope",
  )
```

### Cf. against data

```{r}
df_data %>% 
  filter(str_detect(state_territory, "Massachusetts")) %>% 
  
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_count() +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_energyBurden, n = 100),
    aes(y = .value, group = .draw), 
    alpha = 0.15,
    color = "cyan"
  ) +
  geom_smooth(method = "lm", se = FALSE, color = "salmon")
```

- The model agrees with a simple linear regression on the data

## Colorado: Bayesian failure

One might expect that the patterns due to racism persist across states. I developed the following prior based on fitting a bayesian model on the Massachusetts data.

```{r}
#|cache: true
model_CO <- stan_glm(
  data = df_data %>% 
    filter(
      str_detect(state_territory, "Colorado"),
      !is.na(percent_black_or_african_american_alone)
    ),
    # slice_sample(n = 100), # Take a random subsample
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Prior model, use the Stan defaults for dispersion
  # Use an "overconfident" prior for the slope, based on the energy burden posterior for MA
  prior = normal(50, 5),
  prior_intercept = normal(51, 1),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
) 
```

### Diagnostics

```{r}
# Effective sample size ratio and Rhat
neff_ratio(model_CO)
rhat(model_CO)
```



```{r fig.width=12}
mcmc_trace(model_CO, size = 0.1)
```

- No signs of a MCMC pathologies

### Posterior analysis

```{r fig.width=12, fig.height=6}
mcmc_dens_overlay(model_CO)
```


```{r}
df_model_CO <- 
  model_CO %>% 
  as_tibble()

df_model_CO %>% 
  ggplot(aes(`(Intercept)`, percent_black_or_african_american_alone)) +
  geom_density2d() +
  labs(
    x = "Intercept",
    y = "Slope",
  )
```

### Cf. against data

```{r}
df_data %>% 
  filter(str_detect(state_territory, "Colorado")) %>% 
  
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_count() +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_CO, n = 100),
    aes(y = .value, group = .draw), 
    alpha = 0.15,
    color = "cyan"
  ) +
  geom_smooth(method = "lm", se = FALSE, color = "salmon") +
  geom_smooth(se = FALSE, color = "salmon")
```

- The Bayesian model strongly disagrees with a simple linear regression on the data and the general pattern, due to the overconfident prior

## Florida: Bayesian success

### Subsample

```{r}
set.seed(101)

df_fl <- 
  df_data %>% 
  filter(state_territory == "Florida") %>% 
  slice_sample(n = 25)

df_fl %>% 
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_point() +
  geom_smooth(method = "lm") +
  geom_smooth(
    data = df_data %>% 
      filter(state_territory == "Florida"),
    method = "lm"
  )
```


### Fit model

```{r}
#|cache: true
model_FL <- stan_glm(
  data = df_fl,
  # Likelihood model
  formula = energy_burden_percentile ~ percent_black_or_african_american_alone,
  family = gaussian,           # link function
  # Prior model, use the Stan defaults for dispersion
  # Use an "overconfident" prior for the slope, based on the energy burden posterior for MA
  prior = normal(50, 5),
  prior_intercept = normal(51, 1),
  # Numerical parameters
  chains = 4, 
  iter = 5000*2, # to account for 50% burn-in
  seed = 84735,  # the BAYES seed!
  refresh = FALSE
) 
```

### Diagnostics

```{r}
# Effective sample size ratio and Rhat
neff_ratio(model_FL)
rhat(model_FL)
```



```{r fig.width=12}
mcmc_trace(model_FL, size = 0.1)
```

- No signs of a MCMC pathologies

### Posterior analysis

```{r fig.width=12, fig.height=6}
mcmc_dens_overlay(model_FL)
```


```{r}
df_model_FL <- 
  model_FL %>% 
  as_tibble()

df_model_FL %>% 
  ggplot(aes(`(Intercept)`, percent_black_or_african_american_alone)) +
  geom_density2d() +
  labs(
    x = "Intercept",
    y = "Slope",
  )
```

### Cf. against data

```{r}
df_data %>% 
  filter(
    str_detect(state_territory, "Florida"),
    # 0 < percent_black_or_african_american_alone
  ) %>% 
  
  ggplot(aes(
    x = percent_black_or_african_american_alone,
    y = energy_burden_percentile
  )) +
  geom_count() +
  geom_line(
    data = . %>% 
      filter(!is.na(percent_black_or_african_american_alone)) %>% 
      select(percent_black_or_african_american_alone) %>% 
      tidybayes::add_fitted_draws(model_FL, n = 100),
    aes(y = .value, group = .draw), 
    alpha = 0.15,
    color = "cyan"
  ) +
  geom_smooth(method = "lm", se = TRUE, color = "salmon") +
  geom_smooth(data = df_fl, method = "lm", se = TRUE, color = "salmon")
  # geom_smooth(se = TRUE, color = "salmon")
```

- The Bayesian model agrees with a regression on the full Florida dataset
